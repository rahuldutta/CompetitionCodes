#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <set>
#include <math.h>

using namespace std;
int M[100];
double R[100];
double C[100];

int main()
{
	int cases;
	cin>>cases;
	while(cases--)
	{
		double origRate;
		long long origminuites;
		int noofplans,i,j;
		cin>>origRate>>origminuites>>noofplans;
		origRate=floor(origRate*100)/100;
		//cout<<origRate<<endl;
		int maxmonth=0;
		memset(M,0,sizeof(M));
		memset(R,0,sizeof(R));
		memset(C,0,sizeof(C));
		for(i=0;i<noofplans;i++)
		{
			
			cin>>M[i]>>R[i]>>C[i];
			R[i]=floor(R[i]*100)/100;
			if(M[i]>maxmonth)
				maxmonth=M[i];
			
		}
		long double maxCost=maxmonth*origminuites*origRate;
		int pos=0;
		for(i=1;i<=noofplans;i++)
		{
			int noofpays=(maxmonth/M[i-1]);
			if(maxmonth%M[i-1]!=0)
				noofpays++;
			cout<<noofpays<<endl;
			long double totCost=noofpays*C[i-1]+maxmonth*origminuites*R[i-1];
			//cout<<totCost<<endl;
			if(totCost<maxCost)
			{
				maxCost=totCost;
				pos=i;
			}
		}
		cout<<pos<<endl;
	}
}
